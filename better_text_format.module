<?php

/**
 * @file
 * This is the file description for the Better Text Format Form module.
 *
 * In normal rendering of textarea form fields that are text-format-enabled,
 * the field's help text gets placed below the text format selector and tips.
 * This means that website users are unlikely to notice and read the help text.
 * This module moves the help text up higher in the form so it appears directly
 * below the field's label. It only does this to textarea form fields that are
 * text-format-enabled. Other form fields are not affected.
 */

/**
 * Implements hook_form_alter().
 */
function better_text_format_form_alter(&$form, &$form_state, $form_id) {
  foreach ($form as $key => $item) {
    if (is_array($item) && isset($item['und'])) {
      // Move comments to the top for all WYSIWYG textareas
      if (isset($item['#type']) && $item['#type'] == 'container' && isset($item['und'][0]) && isset($item['und'][0]['#type']) && $item['und'][0]['#type'] == 'text_format') {
        $form[$key]['und'][0]['#theme_options'] = array(
          'description at top' => $item['und'][0]['#description'],
        );
        $form[$key]['und'][0]['#description'] = '';
      }
      // Move comments to the top for field forms of type 'container' that are specifically configured
      else if (isset($item['#type']) && $item['#type'] == 'container' && isset($item['und'][0]) && isset($item['und'][0]['#type']) 
        && isset($item['und'][0]['#entity_type']) && isset($item['und'][0]['#field_name']) && isset($item['und'][0]['#bundle'])
      ) {
        $entity_type = $item['und'][0]['#entity_type'];
        $field_name = $item['und'][0]['#field_name'];
        $bundle_name = $item['und'][0]['#bundle'];
        $instance = field_info_instance($entity_type, $field_name, $bundle_name);
        if (isset($instance['widget']['settings']['better_text_format_description'])) {
          $form[$key]['und'][0]['#theme_options'] = array(
            'description at top' => $instance['widget']['settings']['better_text_format_description'],
          );
        }
        else if (isset($instance['widget']['settings']['better_text_format_top_help'])&& $instance['widget']['settings']['better_text_format_top_help']) {
          $form[$key]['und'][0]['#theme_options'] = array(
            'description at top' => $item['und'][0]['#description'],
          );
          $form[$key]['und'][0]['#description'] = '';
        }
      }
      // Move comments to the top for other field forms that are specifically configured
      else if (isset($item['und']['#entity_type']) && isset($item['und']['#field_name']) && isset($item['und']['#bundle'])) {
        $entity_type = $item['und']['#entity_type'];
        $field_name = $item['und']['#field_name'];
        $bundle_name = $item['und']['#bundle'];
        $instance = field_info_instance($entity_type, $field_name, $bundle_name);
        if (isset($instance['widget']['settings']['better_text_format_description'])) {
          $form[$key]['und']['#theme_options'] = array(
            'description at top' => $instance['widget']['settings']['better_text_format_description'],
          );
        }
        else if (isset($instance['widget']['settings']['better_text_format_top_help']) && $instance['widget']['settings']['better_text_format_top_help']) {
          $form[$key]['und']['#theme_options'] = array(
            'description at top' => $item['und']['#description'],
          );
          $form[$key]['und']['#description'] = '';
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function better_text_format_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  // Add settings for file upload widgets
  $fields = array('managed_file', 'file_generic');
  if (in_array($form['#instance']['widget']['type'], $fields)) {
    $form['instance']['widget']['settings']['better_text_format_description'] = array(
      '#type' => 'textarea',
      '#rows' => 2,
      '#title' => t('Top help message'),
      '#default_value' =>  isset($form['#instance']['widget']['settings']['better_text_format_description']) ? $form['#instance']['widget']['settings']['better_text_format_description'] : '',
      '#description' => t('Help text to insert below the label and above the input form element.'),
    );
  }
  // Just use a checkbox for other widgets
  else {
    $form['instance']['widget']['settings']['better_text_format_top_help'] = array(
      '#type' => 'checkbox', 
      '#title' => t('Display help text at top'),
      '#default_value' =>  isset($form['#instance']['widget']['settings']['better_text_format_top_help']) ? $form['#instance']['widget']['settings']['better_text_format_top_help'] : MAXLENGTH_DEFAULT_JS_LABEL,
      '#description' => t('Should the help text appear below the label and above the input form element?'),
    );
  }
}

/**
 * implements hook_theme_registry_alter
 */ 
function better_text_format_theme_registry_alter(&$theme_registry){
  // set our custom function for theming form_element_label
  
  // duplicate the original theme hook, under a new.  This
  // will allow us to 'wrap' the theme function without
  // breaking it.
  $theme_registry['form_element_label_x'] = $theme_registry['form_element_label'];

  // because we don't need to count on drupal to re-load this file
  // we're going to only override the 'function' key
  // and leave the 'theme path' etc. to the core setting
  // to avoid potential problems down the road if
  // core changes.
  $theme_registry['form_element_label']['function'] = 'better_text_format_theme_form_element_label';
  
}

/**
 * Replacement for core theme_form_element_label function.
 *
 * Prints #description at top of field output.
 * Because of jujitsu happening in FAPI theming/wrapping,
 * ctools and WYSIWYG, we have to jump through some hoops 
 * to pull this off.
 *
 * @param $fields
 *   An array of fields.
 */ 
function better_text_format_theme_form_element_label($variables) {
  $desc = '';
  if (isset($variables['element']['#theme_options']['description at top'])) {
    $desc = '<div class="description">' . $variables['element']['#theme_options']['description at top'] . '</div>';
  }

  // pass element through the "real" theme hook
  return theme( 'form_element_label_x' , $variables) . $desc;
}
